# 하루에 한 번 산을 넘어가는 떡 장사 할머니는 호랑이에게 떡을 주어야 산을 넘어갈 수 있는데, 욕심 많은 호랑이는 어제 받은 떡의 개수와 그저께 받은 떡의 개수를 더한 만큼의 떡을 받아야만 할머니를 무사히 보내 준다고 한다. 

# 예를 들어 첫째 날에 떡을 1개 주었고, 둘째 날에는 떡을 2개 주었다면 셋째 날에는 1+2=3개, 넷째 날에는 2+3=5개, 다섯째 날에는 3+5=8개, 여섯째 날에는 5+8=13개를 주어야만 무사히 산을 넘어갈 수 있다. 

# 우리는 산을 무사히 넘어온 할머니에게 오늘 호랑이에게 몇 개의 떡을 주었는지, 그리고 오늘이 호랑이를 만나 떡을 준지 며칠이 되었는지를 알아내었다. 할머니가 호랑이를 만나서 무사히 넘어온 D째 날에 준 떡의 개수가 K개임을 알 때, 여러분은 할머니가 호랑이를 처음 만난 날에 준 떡의 개수 A, 그리고 그 다음 날에 호랑이에게 준 떡의 개수 B를 계산하는 프로그램을 작성하시오. 이 문제에서는 항상 1 ≤ A ≤ B 이다.

# 예를 들어 여섯 번째 날에 산을 무사히 넘어온 할머니가 호랑이에게 준 떡이 모두 41개라면, 호랑이를 만난 첫 날에 준 떡의 수는 2개, 둘째 날에 준 떡의 수는 7개이다. 즉 셋째 날에는 9개, 넷째 날에는 16개, 다섯째 날에는 25개, 여섯째 날에는 41개이다. 따라서 A=2, B=7 이 된다. 단 어떤 경우에는 답이 되는 A, B가 하나 이상일 때도 있는데 이 경우에는 그 중 하나만 구해서 출력하면 된다.

day, k = map(int, input().split())


fib = [0] * day
fib[1] = 1
for i in range(2, day):
    fib[i] = fib[i-1] + fib[i-2]

# array = [[0,0] for _ in range(day+1)]


a, b = fib[day-2], fib[day-1] # A나온횟수, B나온횟수

# B = k-aA / b , k-aA를 b로 나눈 나머지가 0일 경우 정수해
# A <= B 이니 A++로 반복

result_A = 0
result_B = 0
for i in range(1,1000):
    if (k-a*i) % b == 0:
        result_A = i
        result_B = int((k-a*i) / b)
        break


# for i in range(3, day+1):
#     array[i][0], array[i][1] = fib[i-2], fib[i-1] # A나온횟수, B나온횟수

print(result_A)
print(result_B)
# fib = 1,1,2,3,5...
# 1: A
# 2: B
# 3: A+B
# 4: A+2B
# 5: 2A+3B
# 6: 3A+5B
# 7: 5A+8B
